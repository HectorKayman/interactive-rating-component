{"mappings":"AAAA;AAEA,QAAQ;AACR,MAAM,WAAW,SAAS,cAAc;AACxC,MAAM,cAAc,SAAS,cAAc;AAE3C,iBAAiB;AACjB,MAAM,mBAAmB,SAAS,cAAc;AAChD,MAAM,SAAS,SAAS,cAAc;AACtC,MAAM,QAAQ,SAAS,cAAc;AAErC,yBAAyB;AACzB,IAAI,SAAS;AAEb,oCAAoC;AACpC,MAAM,cAAc;IAClB,iBAAiB,iBAAiB,QAAQ,QAAQ,CAAC;QACjD,KAAK,UAAU,IAAI;QACnB,KAAK,UAAU,OAAO;QACtB,KAAK,UAAU,OAAO;IACxB;AACF;AAEA,sCAAsC;AACtC,MAAM,eAAe,SAAU,KAAK;IAClC,MAAM,aAAa;QAAC;QAAO;QAAO;QAAS;QAAQ;KAAO;IAE1D,IAAI,WAAW,SAAS,MAAM,OAAO,KAAK;QACxC,yCAAyC;QACzC;QAEA,uCAAuC;QACvC,MAAM,OAAO,UAAU,OAAO;QAC9B,MAAM,OAAO,UAAU,IAAI;QAC3B,MAAM,OAAO,UAAU,IAAI;QAE3B,oCAAoC;QACpC,SAAS,WAAW,QAAQ,MAAM,OAAO,MAAM;IACjD;AACF;AAEA,uDAAuD;AACvD,MAAM,YAAY;IAChB,SAAS,UAAU,OAAO;IAC1B,YAAY,UAAU,OAAO;AAC/B;AAEA,6BAA6B;AAC7B,iBAAiB,iBAAiB,SAAS,SAAU,CAAC;IACpD,iDAAiD;IACjD,aAAa;AACf;AAEA,mCAAmC;AACnC,OAAO,iBAAiB,SAAS,SAAU,CAAC;IAC1C,EAAE;IAEF,yCAAyC;IACzC,IAAI,WAAW,GAAG;IAElB,qCAAqC;IACrC,MAAM,cAAc;IAEpB,uCAAuC;IACvC;AACF;AAEA,6DAA6D;AAC7D,SAAS,iBAAiB,WAAW,SAAU,KAAK;IAClD,IAAI,CAAC,YAAY,UAAU,SAAS,aAAa,MAAM,QAAQ,UAAU;QACvE;QACA;IACF;AACF","sources":["src/script.js"],"sourcesContent":["'use strict';\r\n\r\n// Cards\r\nconst mainCard = document.querySelector('#main-card');\r\nconst successCard = document.querySelector('#success-card');\r\n\r\n// Inner Elements\r\nconst ratingsContainer = document.querySelector('#ratings');\r\nconst button = document.querySelector('button');\r\nconst rated = document.querySelector('#rated');\r\n\r\n// Stores selected rating\r\nlet rating = 0;\r\n\r\n// Resets previously selected rating\r\nconst resetRating = function () {\r\n  ratingsContainer.querySelectorAll('span').forEach((item) => {\r\n    item.classList.add('bg-medium-grey');\r\n    item.classList.remove('bg-normal-grey');\r\n    item.classList.remove('text-white');\r\n  });\r\n};\r\n\r\n// Function to select a clicked rating\r\nconst selectRating = function (event) {\r\n  const ratingList = ['one', 'two', 'three', 'four', 'five'];\r\n\r\n  if (ratingList.includes(event.target.id)) {\r\n    // Unselects a previously selected rating\r\n    resetRating();\r\n\r\n    // Selects the currently clicked rating\r\n    event.target.classList.remove('bg-medium-grey');\r\n    event.target.classList.add('bg-normal-grey');\r\n    event.target.classList.add('text-white');\r\n\r\n    // Stores the rating into a variable\r\n    rating = ratingList.indexOf(event.target.id) + 1;\r\n  }\r\n};\r\n\r\n// Function to swap cards and show success message card\r\nconst swapCards = function () {\r\n  mainCard.classList.toggle('hidden');\r\n  successCard.classList.toggle('hidden');\r\n};\r\n\r\n// Event listener for ratings\r\nratingsContainer.addEventListener('click', function (e) {\r\n  // Call the function to select the clicked rating\r\n  selectRating(e);\r\n});\r\n\r\n// Event listener for submit button\r\nbutton.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n\r\n  // Guard clause if no rating was selected\r\n  if (rating === 0) return;\r\n\r\n  // Update rating span on success card\r\n  rated.textContent = rating;\r\n\r\n  // Call the function for swapping cards\r\n  swapCards();\r\n});\r\n\r\n// Event listener for escape key when success card is visible\r\ndocument.addEventListener('keydown', function (event) {\r\n  if (!successCard.classList.contains('hidden') && event.key === 'Escape') {\r\n    resetRating();\r\n    swapCards();\r\n  }\r\n});\r\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}